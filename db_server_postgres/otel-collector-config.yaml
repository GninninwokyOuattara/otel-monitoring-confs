receivers:
  filelog/pg:
    start_at: beginning
    include: [/pg_log/*.log]
    include_file_path: true
    retry_on_failure:
      enabled: true
      max_elapsed_time: 0
    storage: file_storage/filelogreceiver
    multiline:
      line_start_pattern: ^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}
    operators:
      - type: regex_parser
        regex: ^(?P<log_timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<timezone>EST) \[(?P<process_id>\d+)\] (?P<log_severity>[A-ZÉÈÊË]+)\s*:\s*(?P<message>[\s\S]*)
        severity:
          parse_from: attributes.log_severity

  filelog/audit:
    start_at: beginning
    include: [/var/log/audit/audit.log] # Make sure acl permissions are set for user 10001
    include_file_path: true
    retry_on_failure:
      enabled: true
      max_elapsed_time: 0
    storage: file_storage/filelogreceiver
    operators:
      # - type: regex_replace # not yet in the (current) latest release it seems.
      #   regex: "\x1D"
      #   replace_with: " "
      #   field: body
      - type: add
        field: body
        value: EXPR(replace(body, '\x1D', ' ')) # Meanwhile this handle it perfectly, replacing the group separator with a space

      # Will flatten the log message and extract every key=value pairs.
      - type: key_value_parser
        on_error: send_quiet
      - type: key_value_parser
        on_error: send_quiet
        parse_from: attributes.msg

      - type: filter
        expr: 'attributes["unit"] == "heartbeat"' # kills hearbeat on sight !

      # Will set a value for the severity field
      - type: add
        field: attributes["audit_key"]
        value: EXPR(attributes["key"] ?? "none")

      # Set timestamp of the logs to the produced timestamp and promote severity to the key (will be updated later)
      - type: regex_parser
        regex: msg=audit\((?P<timestamp>\d+\.\d+):(?P<audit_id>\d+)\)
        timestamp:
          parse_from: attributes["timestamp"]
          layout_type: epoch
          layout: s.ms
        severity:
          parse_from: attributes["audit_key"]
          mapping:
            error:
              - privileges-config-changes
              - access-audit-trail
              - iptables_exec
            warn:
              - maybe-escalation
              - elevated-privs-session
              - changes-accounts
              - time-change
              - modification-audit
              - suspicious_activity
              - sbin_suspicious
            warn2:
              - permissions_mod
              - unsuccessful_file_access
            info:
              - none

  hostmetrics:
    root_path: /hostfs
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.physical.count:
            enabled: true
          system.cpu.logical.count:
            enabled: true
          system.cpu.frequency:
            enabled: true
      load:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.linux.memory.available:
            enabled: true
          system.memory.limit:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      network:
      processes:
      process:
        mute_process_all_errors: true
        metrics:
          process.cpu.utilization:
            enabled: true
          process.memory.utilization:
            enabled: true
          process.threads:
            enabled: true
          process.paging.faults:
            enabled: true
      system:

  postgresql:
    endpoint: 192.168.1.224:5432
    transport: tcp
    username: user_beasy
    password: BarnoinBeasyBD@224
    databases: # empty will monitor all databases non-templates.
    collection_interval: 10s
    tls:
      insecure: true

extensions:
  file_storage/filelogreceiver:
    create_directory: true
    directory: /var/lib/otelcol/file_storage/receiver
  file_storage/otlpoutput:
    create_directory: true
    directory: /var/lib/otelcol/file_storage/output

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 15

  resourcedetection/env:
    detectors: [env]
    timeout: 2s
    override: false

  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]

  transform:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["host.name"], resource.attributes["host.name"])
          - set(attributes["process.command"], resource.attributes["process.command"])
          - set(attributes["process.command_line"], resource.attributes["process.command_line"])
          - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
          - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
          - set(attributes["process.owner"], resource.attributes["process.owner"])
          - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
          - set(attributes["process.pid"], resource.attributes["process.pid"])

  batch:

exporters:
  otlp:
    endpoint: "http://192.168.1.232:4317"
    retry_on_failure:
      enabled: true
    sending_queue:
      storage: file_storage/otlpoutput
    tls:
      insecure: true

  otlphttp:
    endpoint: "http://192.168.1.232:4318"
    retry_on_failure:
      enabled: true
    sending_queue:
      storage: file_storage/otlpoutput
    tls:
      insecure: true

  debug:
    verbosity: normal

service:
  extensions: [file_storage/filelogreceiver, file_storage/otlpoutput]
  pipelines:
    logs/audit:
      receivers: [filelog/audit]
      processors: [memory_limiter, resourcedetection/env, batch]
      exporters: [otlp]

    logs/pg:
      receivers: [filelog/pg]
      processors: [memory_limiter, resourcedetection/env, batch]
      exporters: [otlp]

    metrics/pg:
      receivers: [postgresql]
      processors: [memory_limiter, resourcedetection/env, batch]
      exporters: [otlp]

    metrics/host:
      receivers: [hostmetrics]
      processors:
        [
          memory_limiter,
          resourcedetection/env,
          resourcedetection/system,
          transform,
          batch,
        ]
      exporters: [otlp]
