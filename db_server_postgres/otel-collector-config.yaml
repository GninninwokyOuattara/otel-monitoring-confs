# Receivers
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  filelog:
    include: [/pg_log/*.log]
    operators:
      - type: regex_parser
        regex: '/^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<timezone>EST) \[(?P<process_id>\d+)\] (?P<severity>[A-ZÉÈÊË]+)\s*:\s*(?P<message>.+)$'
        timestamp:
          parse_from: attributes.timestamp
          layout: "%Y-%m-%d %H:%M:%S %Z"
        severity:
          parse_from: attributes.severity
    operators:
      - type: add
        field: resource["service.name"]
        value: beasy_postgres_dev_224

  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      load:
      memory:
      disk:
      filesystem:
      network:
      processes:

  postgresql:
    endpoint: localhost:5432
    transport: tcp
    username: user_beasy
    password: BarnoinBeasyBD@224
    databases: # empty will monitor all databases non-templates.
    collection_interval: 10s
    tls:
      insecure: true

# Processors
processors:
  batch:

# Exporters
exporters:
  otlphttp/logs:
    endpoint: "http://192.168.1.232:3100/otlp"
    tls:
      insecure: true
  
  otlphttp/metrics:
    endpoint: "http://192.168.1.232:4317"
    tls:
      insecure: true
  
  debug:
    # verbosity: detailed
  


# Pipelines
service:
  pipelines:
    logs/pg:
      receivers: [filelog]
      processors: [batch]
      exporters: [debug, otlphttp/logs]
    metrics:
      receivers: [hostmetrics, postgresql]
      processors: [batch]
      exporters: [debug, otlphttp/metrics]

