apiVersion: 1

datasources:
  - name: Tempo
    type: tempo
    uid: EbPG8fYoztempo
    url: http://tempo:3200
    access: proxy
    basicAuth: false
    jsonData:
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: "EbPG8fYozloki"
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        tags: ["job", "instance", "namespace"]
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="$${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: "EbPG8fYozprom"
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
        tags: [{ key: "service.name", value: "service" }, { key: "job" }]
        queries:
          - name: "Sample query"
            query: "sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))"
      # tracesToProfiles:
      #   datasourceUid: "grafana-pyroscope-datasource"
      #   tags: ["job", "instance", "namespace"]
      #   profileTypeId: "process_cpu:cpu:nanoseconds:cpu:nanoseconds"
      #   customQuery: true
      #   query: 'method="$${__span.tags.method}"'
      serviceMap:
        datasourceUid: "EbPG8fYozprom"
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: "-1h"
        spanEndTimeShift: "1h"
      spanBar:
        type: "Tag"
        tag: "http.path"
      streamingEnabled:
        search: true
