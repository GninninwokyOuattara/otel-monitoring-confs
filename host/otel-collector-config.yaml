# Receivers
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  hostmetrics:
    root_path: /hostfs
    collection_interval: 10s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.physical.count:
            enabled: true
          system.cpu.logical.count:
            enabled: true
          system.cpu.frequency:
            enabled: true

      load:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
          system.linux.memory.available:
            enabled: true
          system.memory.limit:
            enabled: true

      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true

      network:
      processes:
      process:
        mute_process_all_errors: true
      system:

# Processors
processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 15

  resourcedetection/env:
    detectors: [env]
    timeout: 2s
    override: false

  batch:

# Exporters
exporters:
  otlphttp/logs:
    endpoint: "http://loki:3100/otlp"
    tls:
      insecure: true
  debug:
    # verbosity: detailed

  prometheus/host:
    endpoint: "0.0.0.0:8889"
    namespace: host_metrics
    resource_to_telemetry_conversion:
      enabled: true
  prometheus/others:
    endpoint: "0.0.0.0:8887"
    resource_to_telemetry_conversion:
      enabled: true

# Pipelines
service:
  pipelines:
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [debug, otlphttp/logs]
    metrics/host:
      receivers: [hostmetrics]
      processors: [memory_limiter, resourcedetection/env, batch]
      exporters: [prometheus/host]
    metrics/others:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [prometheus/others]
